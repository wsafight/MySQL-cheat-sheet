import{_ as e,c as l,b as a,o as n}from"./app--XYqrjBE.js";const i="/server-study-notes/assets/slow-query-aliyun-CAJAygtN.png",p={};function r(t,s){return n(),l("div",null,s[0]||(s[0]=[a(`<h1 id="慢查询日志" tabindex="-1"><a class="header-anchor" href="#慢查询日志"><span>慢查询日志</span></a></h1><p>在优化 MySQL 时，通常需要对数据库进行分析。分析慢查询日志是一个非常重要的手段。</p><h2 id="开启慢查询日志" tabindex="-1"><a class="header-anchor" href="#开启慢查询日志"><span>开启慢查询日志</span></a></h2><p>在配置文件 my.cnf 或 my.ini 中在 [mysqld] 一行下面加入两个配置参数：</p><p>log-slow-queries=/data/mysqldata/slow-query.log</p><p>long_query_time=5</p><p>注：log-slow-queries 参数为慢查询日志存放的位置，一般这个目录要有 MySQL 的运行帐号的可写权限，一般都将这个目录设置为 MySQL 的数据存放目录。</p><p>long_query_time=5 中的 5 表示查询超过五秒才记录。</p><p>还可以在 my.cnf 或者 my.ini 中添加 log-queries-not-using-indexes 参数，表示记录下没有使用索引的查询。</p><h2 id="慢查询日志分析" tabindex="-1"><a class="header-anchor" href="#慢查询日志分析"><span>慢查询日志分析</span></a></h2><p>我们可以通过打开 log 文件查看得知哪些 SQL 语句执行效率低下。<br> 从日志中，可以发现查询时间超过 5 秒的 SQL，而小于 5 秒的语句没有出现在此日志中。</p><p>如果慢查询日志中记录内容很多，可以使用 mysqldumpslow 工具（MySQL 客户端安装自带）来对慢查询日志进行分类汇总。</p><div class="language-SQL line-numbers-mode" data-highlighter="prismjs" data-ext="SQL" data-title="SQL"><pre><code><span class="line">-- 记录次数最多的 10 条SQL语句</span>
<span class="line">mysqldumpslow -s c -t 10 /database/mysql/slow-query.log</span>
<span class="line"></span>
<span class="line">-- 返回记录集最多 10 个查询语句</span>
<span class="line">mysqldumpslow -s r -t 10 /database/mysql/slow-query.log</span>
<span class="line"></span>
<span class="line">-- 按照时间排序的前10条里面含有左连接的查询语句</span>
<span class="line">mysqldumpslow -s t -t 10 -g &quot;left join&quot; 10 /database/mysql/slow-query.log</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-s, 是表示按照何种方式排序，c、t、l、r 分别是按照记录次数、时间、查询时间、返回的记录数来排序，ac、at、al、ar，表示相应的倒叙。</p><p>-t, 是 top n 的意思，即为返回前面多少条的数据。</p><p>-g, 后边可以写一个正则匹配模式，大小写不敏感的。</p><p>使用 mysqldumpslow 命令可以非常明确的得到各种我们需要的查询语句，对 MySQL 查询语句的监控、分析、优化是 MySQL 优化非常重要的一步。开启慢查询日志后，由于日志记录操作，在一定程度上会占用 CPU 资源影响 mysql 的性能，但是可以阶段性开启来定位性能瓶颈。</p><h2 id="云数据库" tabindex="-1"><a class="header-anchor" href="#云数据库"><span>云数据库</span></a></h2><p>如果是云数据库的话，可以直接进行分析：</p><p><img src="`+i+'" alt="阿里云控制台"></p>',20)]))}const o=e(p,[["render",r],["__file","slow-query-log.html.vue"]]),c=JSON.parse('{"path":"/mysql/performance/slow-query-log.html","title":"慢查询日志","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"开启慢查询日志","slug":"开启慢查询日志","link":"#开启慢查询日志","children":[]},{"level":2,"title":"慢查询日志分析","slug":"慢查询日志分析","link":"#慢查询日志分析","children":[]},{"level":2,"title":"云数据库","slug":"云数据库","link":"#云数据库","children":[]}],"git":{"updatedTime":1711469917000,"contributors":[{"name":"wsafight","email":"984292420@qq.com","commits":2}]},"filePathRelative":"mysql/performance/slow-query-log.md"}');export{o as comp,c as data};
