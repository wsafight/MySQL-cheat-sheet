import{_ as e,c as n,b as i,o as a}from"./app--XYqrjBE.js";const l={};function m(o,t){return a(),n("div",null,t[0]||(t[0]=[i('<h1 id="自增键空间" tabindex="-1"><a class="header-anchor" href="#自增键空间"><span>自增键空间</span></a></h1><p>使用 MySQL 时候，主键往往会设置为递增，主键数字默认被创建为有符号整数。当插入了足够多的数据行时，继续插入会导致出错。</p><p>如果将主键设置为无符号整数（unsigned），数据量限制会变成原本的 2 倍。</p><p>我们来看一下不同的数据结构有多大。以下分别对应为整数类型以及有符号最大值，无符号整数最大值。</p><ul><li>tinyint 127 255</li><li>smallint 32767 65535</li><li>mediumint 8388607 16777215</li><li>int 2147483647 4294967295</li><li>bigint 9223372036854775807 18446744073709551615</li></ul><p>在选择主键的数据类型时候，必须要结合当前业务来进行判断。</p><p>同时，MySQL 可以为整数类型指定宽度，例如 INT(11)，但它并不会限制数据的合法范围。只是规定了 MySQL 的一些交互工具用来显示字符的个数。对于存储和计算来说，INT(1) 和 INT(20) 没有区别。</p>',7)]))}const s=e(l,[["render",m],["__file","auto-increment.html.vue"]]),c=JSON.parse('{"path":"/mysql/notes/auto-increment.html","title":"自增键空间","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1712074489000,"contributors":[{"name":"jump-and-jump","email":"984292420@qq.com","commits":1}]},"filePathRelative":"mysql/notes/auto-increment.md"}');export{s as comp,c as data};
