import{_ as a,c as i,b as l,o as s}from"./app--XYqrjBE.js";const t={};function c(n,e){return s(),i("div",null,e[0]||(e[0]=[l('<h1 id="什么是-devops" tabindex="-1"><a class="header-anchor" href="#什么是-devops"><span>什么是 DevOps</span></a></h1><p>DevOps 是一种思维方式，同时也是一组工作实践。成功的 DevOps 是将人，过程和工具相互融合。不要将 DevOps 简单的理解为自动化工具。DevOps 一词是由“开发”和“运维”两个词组合而成的，是一种文化转变，在开发团队和运维团队架起了桥梁（一般认为: 开发和运维是一个个孤岛）。</p><p>DevOps 通常被理解为流程和工具的组合，可促进软件工程和基础架构团队之间的持续写协作。反过来，这些功能可自动的在整个组织中快速可靠的交付应用程序和服务。DevOps 包括多个重点领域，包括自动配置，持续集成，持续监视和测试驱动的开发。</p><p>DevOps 离不开两个重要组成部分（CI 和 CD）</p><h2 id="什么是-ci-cd" tabindex="-1"><a class="header-anchor" href="#什么是-ci-cd"><span>什么是 CI/CD</span></a></h2><p>CI/CD 是持续集成和持续交付/部署的缩写，旨在简化并加快软件开发生命周期。</p><h3 id="持续集成-ci" tabindex="-1"><a class="header-anchor" href="#持续集成-ci"><span>持续集成（CI）</span></a></h3><ul><li>合并开发人员正在开发编写所有代码的一种做法</li><li>通常一天内多次合并和提交代码</li><li>从存储库或生产环境中进行构建和自动化测试，以确保没有集成问题（并及早发现任何问题）</li></ul><h3 id="持续交付-cd" tabindex="-1"><a class="header-anchor" href="#持续交付-cd"><span>持续交付（CD）</span></a></h3><ul><li>可以通过更改自动推送到发布系统，随时将软件发布到生产环境中</li><li>持续<strong>部署</strong>会更进一步，自动将更改推送到生产中。</li></ul>',10)]))}const r=a(t,[["render",c],["__file","what.html.vue"]]),d=JSON.parse('{"path":"/devops/theory/what.html","title":"什么是 DevOps","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"什么是 CI/CD","slug":"什么是-ci-cd","link":"#什么是-ci-cd","children":[{"level":3,"title":"持续集成（CI）","slug":"持续集成-ci","link":"#持续集成-ci","children":[]},{"level":3,"title":"持续交付（CD）","slug":"持续交付-cd","link":"#持续交付-cd","children":[]}]}],"git":{"updatedTime":1728375154000,"contributors":[{"name":"wsafight","email":"984292420@qq.com","commits":1}]},"filePathRelative":"devops/theory/what.md"}');export{r as comp,d as data};
