https://www.kancloud.cn/thinkphp/mysql-parallel-applier/45907

https://mariadb.com/kb/en/subquery-optimizations-map/

http://www.unofficialmysqlguide.com/optimizer-trace.html


代码中写分页查询逻辑时，若 count 为 0 应直接返回，避免执行后面的分页语句


（6）不得使用外键与级联，一切外键概念必须在应用层解决
说明：（概念解释）学生表中的student_id 是主键，那么成绩表中的student_id 则为外键。如果更新学生表中的student_id ,同时触发成绩表中的student_id 更新，即为级联更新。外键与级联更新适用于单机低并发，不适合分布式、高并发集群；级联更新是强阻塞，存在数据库更新风暴的风险；外键影响数据库的插入速度。
（7）禁止使用存储过程，存储过程难以调试和扩展，更没有移植性
（8）禁止使用触发器
（9）数据订正（特别是删除或修改记录操作）时，要先select，避免出现误删除，确认无误才能执行更新语句
（10）对于数据库中表记录的查询和变更，只要涉及多个表，都需要在列名前加表的别名(或表名)进行限定
说明：对于多表进行查询记录、更新记录、删除记录时，如果对操作列没有限定表的别名(或表名)，并且操作列在多个表中存在时，就会抛出异常
  正例：
  select t1.name from table1 as t1,table2 as t2 where t1.id = t2.id
  反例：
  在某业务中，由于多表关联查询语句没有加表的别名（或表名）的限制，正常运行2年后，最近在某表中增加一个同名字段，在预发环境做数据库变更后，在线上查询语句出现 1052 异常：Column 'name' in field list is ambiguous。
（11）存储引擎必须为：InnoDB ；字符集必须为：utf8mb4 ；检验规则：mysql 5.6 使用 utf8mb4_general_ci，mysql 5.7 使用 utf8mb4_unicode_ci
推荐：
（1）SQL语句中表的别名前加as ,并以t1、t2、t3、... 的顺序依次命名
  说明：
    1）别名可以是表的简称，或者是依照表再SQL语句中出现的顺序，以t1、t2、t3 的方式命名
    2）别名前加 as 使别名更容易识别
  如：
    select t1.name from table1 as t1,table2 as t2 where t1.id = t2.id
（2）in 操作能避免则避免，若是在避免不了，需要仔细评估 in 后边的集合元素数量，控制在1000个之内。
（3）TRUNCATE TABLE 比 DELETE 速度快，且使用的系统和事务日志资源少，但TRUNCATE无事务且不触发 trigger ,有可能造成事故，故不建议在开发代码中使用此语句。
  说明：TRUNCATE TABLE 在功能上与不带 WHERE 子句的 DELETE 语句相同。 